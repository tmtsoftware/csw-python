syntax = "proto3";

package csw_protobuf;

import "csw_protobuf/radec.proto";
import "scalapb/scalapb.proto";
import "google/protobuf/timestamp.proto";

option (scalapb.options) = {
    import: "csw.event.client.pb._"
    import: "csw.event.client.pb.TypeMapperSupport._"
    import: "csw.event.client.pb.Implicits._"
    import: "csw.params.core.models._"
    single_file: true
};

message StringItems {
    option (scalapb.message).extends = "ItemType[String]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[StringItems]";
    repeated string values = 1;
}

message BooleanItems {
    option (scalapb.message).extends = "ItemType[Boolean]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[BooleanItems]";
    repeated bool values = 1;
}

message ChoiceItems {
    option (scalapb.message).extends = "ItemType[Choice]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ChoiceItems]";
    repeated string values = 1 [(scalapb.field).type = "Choice"];
}

message RaDecItems {
    option (scalapb.message).extends = "ItemType[RaDec]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[RaDecItems]";
    repeated PbRaDec values = 1 [(scalapb.field).type = "RaDec"];
}

message CharItems {
    option (scalapb.message).extends = "ItemType[Char]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[CharItems]";
    string values = 1 [(scalapb.field).type = "Seq[Char]"];
}

message InstantItems {
    option (scalapb.message).extends = "ItemType[java.time.Instant]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[InstantItems]";
    repeated google.protobuf.Timestamp values = 1 [(scalapb.field).type = "java.time.Instant"];
}

////////////////////////////////////////////////////

message ByteItems {
    option (scalapb.message).extends = "ItemType[Byte]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ByteItems]";
    bytes values = 1 [(scalapb.field).type = "Seq[Byte]"];
}

message ShortItems {
    option (scalapb.message).extends = "ItemType[Short]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ShortItems]";
    repeated int32 values = 1 [(scalapb.field).type = "Short"];
}

message IntItems {
    option (scalapb.message).extends = "ItemType[Int]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[IntItems]";
    repeated int32 values = 1;
}

message LongItems {
    option (scalapb.message).extends = "ItemType[Long]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[LongItems]";
    repeated fixed64 values = 1;
}

message DoubleItems {
    option (scalapb.message).extends = "ItemType[Double]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[DoubleItems]";
    repeated double values = 1;
}

message FloatItems {
    option (scalapb.message).extends = "ItemType[Float]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[FloatItems]";
    repeated float values = 1;
}

//////////////////////////////////////

message ByteArrayItems {
    option (scalapb.message).extends = "ItemType[ArrayData[Byte]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ByteArrayItems]";
    repeated ByteItems values = 1 [(scalapb.field).type = "ArrayData[Byte]"];
}

message ShortArrayItems {
    option (scalapb.message).extends = "ItemType[ArrayData[Short]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ShortArrayItems]";
    repeated ShortItems values = 1 [(scalapb.field).type = "ArrayData[Short]"];
}

message IntArrayItems {
    option (scalapb.message).extends = "ItemType[ArrayData[Int]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[IntArrayItems]";
    repeated IntItems values = 1 [(scalapb.field).type = "ArrayData[Int]"];
}

message LongArrayItems {
    option (scalapb.message).extends = "ItemType[ArrayData[Long]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[LongArrayItems]";
    repeated LongItems values = 1 [(scalapb.field).type = "ArrayData[Long]"];
}

message FloatArrayItems {
    option (scalapb.message).extends = "ItemType[ArrayData[Float]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[FloatArrayItems]";
    repeated FloatItems values = 1 [(scalapb.field).type = "ArrayData[Float]"];
}

message DoubleArrayItems {
    option (scalapb.message).extends = "ItemType[ArrayData[Double]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[DoubleArrayItems]";
    repeated DoubleItems values = 1 [(scalapb.field).type = "ArrayData[Double]"];
}

////////////////////////////////////////

message ByteMatrixItems {
    option (scalapb.message).extends = "ItemType[MatrixData[Byte]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ByteMatrixItems]";
    repeated ByteArrayItems values = 1 [(scalapb.field).type = "MatrixData[Byte]"];
}

message ShortMatrixItems {
    option (scalapb.message).extends = "ItemType[MatrixData[Short]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[ShortMatrixItems]";
    repeated ShortArrayItems values = 1 [(scalapb.field).type = "MatrixData[Short]"];
}

message IntMatrixItems {
    option (scalapb.message).extends = "ItemType[MatrixData[Int]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[IntMatrixItems]";
    repeated IntArrayItems values = 1 [(scalapb.field).type = "MatrixData[Int]"];
}

message LongMatrixItems {
    option (scalapb.message).extends = "ItemType[MatrixData[Long]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[LongMatrixItems]";
    repeated LongArrayItems values = 1 [(scalapb.field).type = "MatrixData[Long]"];
}

message FloatMatrixItems {
    option (scalapb.message).extends = "ItemType[MatrixData[Float]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[FloatMatrixItems]";
    repeated FloatArrayItems values = 1 [(scalapb.field).type = "MatrixData[Float]"];
}

message DoubleMatrixItems {
    option (scalapb.message).extends = "ItemType[MatrixData[Double]]";
    option (scalapb.message).companion_extends = "ItemTypeCompanion[DoubleMatrixItems]";
    repeated DoubleArrayItems values = 1 [(scalapb.field).type = "MatrixData[Double]"];
}
